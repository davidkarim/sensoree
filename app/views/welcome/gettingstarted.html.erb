<div class="col l6 s12">
  <div class="container">
    <div class="row center">
      <h1 style="color: #ff9800;">Getting Started</h1>
      <br>
      <p style="text-align: justify">
        We have organized a series of activities into projects in order to help
        in getting you started. The easiest way to verify that you have set up
        your account properly is to start with the first project and proceed
        from there. The sensors we use as examples are part of the SunFounder
        sensor kit, but any sensor would work. Let's start with Projects 1 and
        2 to verify the Pi is set up properly.
      </p>
      <br><br>
      <h4 style="color: #ff9800;"># Project 1</h4>

      <ol style="text-align: left;">
        <li>Log into your account and take note of your API key.
          This key will allow you to upload data to Sensoree.
          Start out by adding a new sensor of type Internet.
          Technically not a sensor,
          we'll start out by having the Pi send ping data to the servers.
          A ping is a way to test connectivity across the Internet.
          The Raspberry Pi will ping a server,
          and then send to Sensoree,
          the amount of time it took to reach that server
          (measured in milliseconds).</li>
        <li>On the Raspberry Pi,
          you may need to reinstall the ping utility if
          your user account doesn't have access.
          By default, the user pi, doesn't have access.
          You can give pi access by issuing:</li>
        <li>sudo apt-get install --reinstall iputils-ping</li>
        <li>Test the ping: ping google.com</li>
        <li>Go to the following link to retrieve the full source code. link</li>
      </ol>

      <h4 style="color: #ff9800;"># Project 2</h4>


    <ol style="text-align: left;">
      <li>After validating that the previous project is sending data to Sensoree,
        let's now configure a temperature sensor from the Sunfounder kit.
        Start out by cloning the wiringPi repsitory from GitHub.
        git clone git:://git.drogon.net/wiringPi
        <li>Install wiringPi: cd wiringPi</li>
        <li>git pull origin ./build</li>
        <li>Now edit the /boot/config.txt file to add hardware access
          through /sys/bus directory.</li>
        <li>Add the following to the /boot/config.txt file: dtoverlay=w1-gpio</li>
        <li>Reboot your device: sudo reboot</li>
        <li>After the device has been rebooted, issue the following commands
          to mount the device drivers:
          <ol>
            <li>sudo modprobe w1-gpio</li>
            <li>sudo modprobe w1-therm</li>
          </ol>
        </li>
        <li>  Now connect the thermometer sensor to the Pi. Navigate to the
          device directory:
          cd /sys/bus/w1/devices/ls
        </li>
        <li>Have a look at the devices shown,
          there should be a numeric directory such as 28-041623a757ff.
          Change to that directory: cd 28-041623a757ff</li>
        <li>To display a reading, issue the following command,
          while in that directory: cat w1_slave</li>
        <li>The following output, verifies a reading:
          <li>7a 01 4b 46 7f ff 0c 10 ec : crc=ec YES
          7a 01 4b 46 7f ff 0c 10 ec t=23625</li>
        </li>
        <li>Dividing the t value by 1000 gives the Celsius reading.
          Now in order to send these values to Sensoree,
          go to the following link to download the source code. link</li>
      </ol>


        <h4 style="color: #ff9800;"># Project 3</h4>
          <ol style="text-align: left;">
            <li>Ultrasound sensor.

            link</li>
          </ol>




      </p>
    </div>
  </div>
</div>
